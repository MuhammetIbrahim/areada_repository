version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: areadera_postgres
    environment:
      POSTGRES_DB: areadera
      POSTGRES_USER: areadera_user
      POSTGRES_PASSWORD: areadera_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U areadera_user -d areadera"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: areadera_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    container_name: areadera_qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334

  celery_worker:
    build: 
      context: ./celery_worker
      dockerfile: Dockerfile
    container_name: areadera_celery_worker
    depends_on:
      - redis
      - postgres
    volumes:
      - ./.env:/app/.env:ro
    environment:
      - PYTHONPATH=/app
    command: uv run celery -A tasks worker --loglevel=info
    restart: unless-stopped

  fastapi:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: areadera_fastapi
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
      - qdrant
    volumes:
      - ./.env:/app/.env:ro
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  qdrant_data: